/*
 * mainCount.cpp
 *
 *  Created on: 9 октября 2020 г.
 *      Author: ЮН
 *  Считаем течения сжатия из покоя в покой для произвольной сетки. Последовательность счета:
 *  1. Считаем в обратном направлении изменения времени с помощью метода характеристик
 *  2. При расчете в рамках п.1 выгружаем точки сетки и значения R и L в них. Это обучающая выборка.
 *  3. Для точек заданной произвольной сетки (например, равномерной) считаем значения R и L в них.
 *  Для этого используем метод ближайших соседей и точки сетки, построенной в п.1,2.
 */
#include "c4mx.hpp"
#include "c4prog1.h"
#include "c4prog2.h"
#include "c4prog3.h"
//#include "prog3.h"

int main(){
// Раздел описания общих параметров -- начало
	gamma = 1.6666667;
	nu = 2;
	rho_ = 10000;
	m = 10;      // масса сжимаемого газа
	rho0 = 1;    // первоначальная плотность
// Раздел описания общих параметров -- окончание

// ==================================================================================================
// Точность чисел устанавливается константой maxPrecision в модулях c4prog1(2,3).cpp
// ==================================================================================================

// ===================================================================================================
// Подготовка шаблона файла net4NN.csv
// ===================================================================================================
// Нужно раскомментировать пять следующих строк, остальное (выше и ниже закомментировать)
	n0c3p1 = 7900;      // число точек на 0-слое, линия АВ, см.статья 1
	n1c3p1 = 10000;     // число точек на ступеньке плотности в момент сжатия, точка А, см.статья 1
	n2c3p1 = 7900;      // число точек на плюс-харктеристике области 3, линия ЕD, см.статья 1
//	c4main1();         // рассчитали в net1.csv сетку, которая будет принята тестовой.
//	c4main21();
	// В netTest.csv скопировали из net1.csv тестовую сетку.
	// Из net1.csv сделали net4NN.csv копированием и добавлением полей DR_cur, DL_cur.


// ===================================================================================================
// Выполнение итерации алгоритма
// ===================================================================================================
// Нужно раскомментировать шесть следующих строк (n0c3p1 - c4main22)
	n0c3p1 = 8000;      // число точек на 0-слое, линия АВ, см.статья 1
	n1c3p1 = 16000;      // число точек на ступеньке плотности в момент сжатия, точка А, см.статья 1
	n2c3p1 = 8000;      // число точек на плюс-харктеристике области 3, линия ЕD, см.статья 1
	c4main1();         // рассчитали в net1.csv сетку, которая будет принята обучающей.
	// в net1.csv выгружаем данные расчетов
	// 1я итерация - 250, 500, 250;
	// 2я итерация - 500, 1000, 500;
	// 3я итерация - 1000, 2000, 1000;
	// 4я итерация - 2000, 4000, 2000;
	// 5я итерация - 4000, 8000, 4000;
	// 6я итерация - 8000, 16000, 8000;
// Счет сетки в обратном направлении времени течений сжатия и траектории поршня -- завершение.
// Построенная сетка записана в файл с именем nameFile = net1.csv

// Счет методом соседей -- запуск
	c4main2();
	// в net1.csv обучающая выборки, точки-соседи
	// в netTest.csv сетка для которой надо рассчитать значения в точках (данные есть из метода характеристик,
	// но мы их пересчитаем методом ближайших соседей)
	// в net4NN.csv сетка в которой рассчитали значения (в точках из netTest.csv) по данным соседей из net1.csv

// Проверяем файл net4NN.csv на готовность (проверяем dR и dL)
	c4main22();

// ===================================================================================================
// Сравненение результатов счета методом характеристик и методом ближайших соседей
// ===================================================================================================
	c4main3();
	// в netTest.csv сетка которая рассчитана методом характеристик - тестовая сетка.
	// в net4NN.csv сетка, которая рассчитана методом ближайших соседей
	// сопоставление этих файлов и показывает точность метода ближайших соседей

//  построена область 1: номер слоя= 478, который отделяет область 1 и 2

}
